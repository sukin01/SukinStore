@{
    ViewBag.Title = "Home Page";
}

<style type="text/css">
    #box {
        width: 800px;
        height: 500px;
        background: #f0f3f9;
        margin: 10px;
        border: 1px solid gray;
        float: left;
    }

    #tools {
        width: 200px;
        height: 500px;
        background: #f0f3f9;
        border: 1px solid gray;
        padding: 5px;
        margin: 10px;
        float: left;
    }


    body {
        -moz-user-select: none; /*火狐*/
        -webkit-user-select: none; /*webkit浏览器*/
        -ms-user-select: none; /*IE10*/
        -khtml-user-select: none; /*早期浏览器*/
        user-select: none;
    }

    .layout {
        border: 1px dashed gray;
        height: 200px;
        width: 300px;
        left: 100px;
        margin: 10px;
    }

    .drag {
        cursor: pointer;
        border: 1px dashed gray;
        margin: 5px;
    }
</style>

<div style="float:left;">
    <div id="tools">
        <div drag="true" dragtext="aaaaaaa" class="drag">Coffee</div>
        <div drag="true" dragtext="bbbbbbb" class="drag">Milk</div>
    </div>
    <div id="box">
        <div hold="true" class="layout"></div>
        <div hold="true" class="layout"></div>
    </div>
</div>

<div style="clear:both;"></div>
<div>
</div>

@*<script src="~/Scripts/DragDrop/DragDrop.js" type="text/javascript"></script>*@
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script type="text/javascript">
    function holdelement(element) {
        this.offset = $(element).offset();
        this.element = element;
        this.IsHit = function (e) {
            var currentx = e.pageX - this.offset.left;
            var currenty = e.pageY - this.offset.top;
            var width = $(this.element).width();
            var height = $(this.element).height();
            if (currentx > 0 && currentx - width < 0 && currenty > 0 && currenty - height < 0) {
                return true;
            }
            else {
                return false;
            }
        };
        this.ToHitSate = function () {
            $(this.element).css("border", "1px dashed red");
        };
        this.ToNormalSate = function () {
            $(this.element).css("border", "1px dashed gray");
        };
    }

    function Drag(callback) {
        this.arryholdelement = new Array();
        this.dragobj = null;
        this.dragshadow = null;
        this.holdobj = null;
        this.init = function (arryholdelement, dragobj, dragshadow, holdobj) {
            $("[hold='true']").each(function (index, element) {
                arryholdelement[index] = new holdelement(element);
            });
            $("[drag='true']").mousedown(function () {
                dragobj = $(this);
                dragshadow = document.createElement("div");
                dragshadow.style.position = "absolute";
                dragshadow.innerHTML = dragobj.text();
                document.getElementById("box").appendChild(dragshadow);
            });
            document.onmouseup = function () {
                if (holdobj != null) {
                    callback(dragobj, holdobj.element);
                    holdobj.ToNormalSate();
                }
                dragobj = null;
                if (dragshadow != null) {
                    document.getElementById("box").removeChild(dragshadow);
                    dragshadow = null;
                }
            };
            document.onmousemove = function (event) {
                var e = event ? event : window.event;
                if (dragobj != null && dragshadow != null) {
                    holdobj = null;
                    dragshadow.style.left = e.clientX + "px";
                    dragshadow.style.top = e.clientY + "px";
                    for (var i = 0; i < arryholdelement.length; i++) {
                        if (arryholdelement[i].IsHit(event)) {
                            holdobj = arryholdelement[i];
                            holdobj.ToHitSate();
                            break;
                        }
                        else {
                            arryholdelement[i].ToNormalSate();
                        }
                    }
                }
            };
        };
        this.init(this.arryholdelement, this.dragobj, this.dragshadow);
    }

    $(this).ready(function () {
        new Drag(function (dragobj, dropobj) {
            alert($(dragobj).html());
        });
    });
</script>

